using Grpc.Core;
using ServiceModel.Grpc.Client;
using ServiceModel.Grpc.Configuration;
using Shared;
using System.Diagnostics;

namespace ServiceModelClient
{
    internal class Program
    {
        private static readonly IClientFactory DefaultClientFactory = new ClientFactory(new ServiceModelGrpcClientOptions
        {
            // set ProtobufMarshaller as default Marshaller
            MarshallerFactory = ProtobufMarshallerFactory.Default
        });
        public static async Task Main(string[] args)
        {
            Thread.Sleep(3000);

            int SelfHostPort = 7000;
            // register IPersonService proxy generated by ServiceModel.Grpc.DesignTime
            DefaultClientFactory.AddCwnetServiceClient() ;

            Console.WriteLine("Call ServerSelfHost");
            await Run(new Channel("localhost", SelfHostPort, ChannelCredentials.Insecure));

            if (Debugger.IsAttached)
            {
                Console.WriteLine("...");
                Console.ReadLine();
            }
        }
        private static async Task Run(ChannelBase channel)
        {
            var cwnetService = DefaultClientFactory.CreateClient<ICwnetService>(channel);

            //var res =  cwnetService.Add(3, 2);
            //await Console.Out.WriteLineAsync(res.ToString());

            var amount = cwnetService.GetNextPaymentAmount("1.23", new DateTime(2023, 3, 1));

            await Console.Out.WriteLineAsync(amount.ToString());
        }
    }
}